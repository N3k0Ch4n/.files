;; Time Widget
(defpoll hourvar  :interval "2s" "date +%H")
(defpoll minutevar  :interval "2s" "date +%M")
(defpoll datevar  :interval "10s" "date +%a,' '%d' '%b")

(defwidget timeWidget []
  (box  :orientation "v"
        :space-evenly "false"
        :class "time"
        :halign "center"
        :valign "center"
        (box  :orientation "h"
              :space-evenly "false"
              :halign "center"
              :spacing  10
              (label  :text hourvar
                      :class "hour")
              (label  :text minutevar
                      :class "minute"))
        (label  :text datevar
                :class "date")))

;; Profile Widget
(defpoll user :interval "60s" "cat ./scripts/user")

(defwidget profileWidget []
  (box  :orientation "v"
        :space-evenly "false"
        :class "profile"
        :spacing 20
        (box  :orientation "h"
              :class "pfp"
              :halign "center")
        (label  :text user
                :class "name")))

;; PowerMenu Widget
(defwidget powerWidget []
  (box  :orientation "v"
        :space-evenly "true"
        :class "power"
        (button :class "poweroff" :onclick 'poweroff' "")
        (button :class "reboot" :onclick 'reboot' "")
        (button :class "logout" :onclick 'logout' "")))

;; MPD Widget
(defpoll musicTitle :interval "2s" "bash ../scripts/music curMusic")
(defpoll musicArtist :interval "2s" "bash ../scripts/music curArtist")
(defpoll musicStat  :interval "1s" "bash ../scripts/music toggle")
(defvar notifyMusic "bash ../scripts/music notify")

(defwidget mpdWidget []
  (box  :orientation "v"
        :space-evenly "false"
        :class "mpd"
        (label  :text musicTitle
                :class "title"
                :limit-width 12)
        (label  :text musicArtist
                :class "artist"
                :limit-width 20)))

(defwidget musicIcon []
  (box  :orientation  "v"
        :space-evenly "false"
        :halign "center"
        :valign "center"
        :class  "musicIcon"
        (label  :text ""
                :class "icon")))

(defwidget controlWidget []
  (box  :orientation "v"
        :space-evenly "true"
          (box  :orientation "h"
                :space-evenly "false"
                :class "prev"
                :halign "center"
                (button :onclick "mpc prev && ${notifyMusic}"
                        (label  :text "")))
          (box  :orientation "h"
                :space-evenly "false"
                :class "toggle"
                :halign "center"
                (button :onclick "mpc toggle"
                        (label  :text musicStat)))
          (box  :orientation "h"
                :space-evenly "false"
                :class "next"
                :halign "center"
                (button :onclick "mpc next && ${notifyMusic}"
                        (label  :text "")))))

(defwidget musicIconWidget []
  (box  (musicIcon)))

;; Volume/Mic/Bright Widget
(defpoll vol :interval "2s" "bash ../scripts/vol vol")
(defpoll mic :interval "2s" "bash ../scripts/vol mic")
(defpoll bri :interval "2s" "bash ../scripts/brightness bright")

(defwidget soundWidget []
  (box  :orientation "v"
        :space-evenly "true"
        :class "sound"
        (box  :orientation "h"
              :space-evenly "false"
              :valign "start"
              (label  :text ""
                      :class "vol")
              (scale  :min 0
                      :max 100
                      :value vol
                      :orientation "h"
                      :onchange "amixer -D pulse sset Master {}%"
                      :class "volScale"))
        (box  :orientation "h"
              :space-evenly "false"
              :valign "center"
              (label  :text ""
                      :class "mic")
              (scale  :min 0
                      :max 40
                      :value mic
                      :onchange "amixer -D pulse sset Capture {}%"
                      :class "micScale"))
        (box  :orientation "h"
              :space-evenly "false"
              :valign "end"
              (label  :text ""
                      :class "bri")
              (scale  :min 0
                      :max 40
                      :value bri
                      :onchange "light -S {}"
                      :class "briScale"))))

;; Apps Widget
(defwidget appsWidget []
  (box  :orientation "h"
        :space-evenly "false"
        :class "apps"
        :spacing 30
        (button :onclick "firefox &"
                :class "app1"
                (image  :path "../assets/firefox-icon.png"))
        (button :onclick "cd $HOME && thunar &"
                :class "app2"
                (image  :path "../assets/folder-close-icon.png"))
        (button :onclick "kitty ncmpcpp &"
                :class "app3"
                (image  :path "../assets/music-icon.png"))
        (button :onclick "bash $HOME/.config/scripts/scr.sh; dunstify"
                :class "app4"
                (image  :path "../assets/pictures-icon.png"))))

;; Background Widget
(defwidget bg []
  (box  :style "background-color: #1d2021;"))

;;--//--//--//--//--//
;; Set up all Windows

(defwindow time
      :monitor 0
      :geometry (geometry :x "-20px"
                          :y "80px"
                          :width "350px"
                          :height "100px"
                          :anchor "top right")
      :wm-ignore true
      (timeWidget))

(defwindow profile
      :monitor 0
      :geometry (geometry :x "-20px" 
                          :y "130px"
                          :width "330px"
                          :height "290px"
                          :anchor "top right")
      :wm-ignore true
      (profileWidget))

(defwindow power
      :monitor 0
      :geometry (geometry :x "-30px"
                          :y "300px"
                          :width "70px"
                          :height "150px"
                          :anchor "top right")
      :wm-ignore true
      (controlWidget))

(defwindow mpd
      :monitor 0
      :geometry (geometry :x "-30px"
                          :y "190px"
                          :width "250px"
                          :height "100px"
                          :anchor "top right")
      :wm-ignore true
      (mpdWidget))

(defwindow musicIcon
      :monitor 0
      :geometry (geometry :x "-290px"
                          :y "190px"
                          :width "70px"
                          :height "100px"
                          :anchor "top right")
      :wm-ignore true
      (musicIconWidget))

(defwindow controlIcon
      :monitor 0
      :geometry (geometry :x "-110px"
                          :y "300px"
                          :width "250px"
                          :height "40px"
                          :anchor "top right")
      :wm-ignore true
      (controlWidget))

(defwindow sound
      :monitor 0
      :geometry (geometry :x "-110px"
                          :y "300px"
                          :width "250px"
                          :height "150px"
                          :anchor "top right")
      :wm-ignore true
      (soundWidget))

(defwindow apps
      :monitor 0
      :geometry (geometry :x "-20px"
                          :y "490px"
                          :width "330px"
                          :height "60px"
                          :anchor "top right")
      :wm-ignore true
      (appsWidget))

(defwindow widget
      :monitor 0
      :geometry (geometry :x "-20px"
                          :y "70px"
                          :width "350px"
                          :height "390px"
                          :anchor "top right")
      :wm-ignore true
      (bg))
